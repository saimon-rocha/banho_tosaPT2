/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifsul.bcc.lpoo.projetolpooe1_view;

import br.edu.ifsul.bcc.lpoo.projetolpooe1_saimonrocha.model.Pet;
import br.edu.ifsul.bcc.lpoo.projetolpooe1_saimonrocha.model.Servico;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.swing.DefaultListModel;

/**
 *
 * @author Saimon AS Rocha
 */
public class Home extends javax.swing.JFrame {

    private EntityManagerFactory emf;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        emf = Persistence.createEntityManagerFactory("pu_pet"); // Inicializa o EntityManagerFactory
        atualizarListaServicos();
    }

    private List<Pet> listarPetsComServicos() {
        EntityManager em = emf.createEntityManager();
        TypedQuery<Pet> query = em.createQuery("SELECT DISTINCT p FROM Pet p JOIN FETCH p.servicos", Pet.class);
        List<Pet> pets = query.getResultList();
        em.close();
        return pets;
    }

    private void atualizarListaServicos() {
        List<Pet> pets = listarPetsComServicos();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (Pet pet : pets) {
            for (Servico servico : pet.getServicos()) {
                String item = pet.getNome() + " - " + servico.getNome();
                // Adiciona somente se não estiver presente
                if (!listModel.contains(item)) {
                    listModel.addElement(item);
                }
            }
        }
        jListaServico.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListaServico = new javax.swing.JList<>();
        btnRemover = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jCliente = new javax.swing.JMenu();
        jServico = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jListaServico);

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jCliente.setText("CLIENTE");
        jCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jClienteMouseClicked(evt);
            }
        });
        jCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClienteActionPerformed(evt);
            }
        });
        jMenuBar1.add(jCliente);

        jServico.setText("SERVICO");
        jServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jServicoMouseClicked(evt);
            }
        });
        jMenuBar1.add(jServico);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemover)
                .addGap(157, 157, 157))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemover)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClienteActionPerformed

    }//GEN-LAST:event_jClienteActionPerformed

    private void jClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jClienteMouseClicked
        Cliente telaCliente = new Cliente();
        telaCliente.setVisible(true);
        atualizarListaServicos();
    }//GEN-LAST:event_jClienteMouseClicked

    private void jServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jServicoMouseClicked
        Servicos telaServico = new Servicos(this, true);
        telaServico.setVisible(true);
        atualizarListaServicos();
        
    }//GEN-LAST:event_jServicoMouseClicked

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // Obtém o serviço selecionado na lista
        String selecionado = jListaServico.getSelectedValue();
        if (selecionado != null) {
            // Extraia o nome do pet e do serviço
            String[] partes = selecionado.split(" - ");
            if (partes.length == 2) {
                String nomePet = partes[0];
                String nomeServico = partes[1];

                EntityManager em = emf.createEntityManager();
                em.getTransaction().begin();
                try {
                    // Encontre o pet
                    TypedQuery<Pet> petQuery = em.createQuery("SELECT p FROM Pet p WHERE p.nome = :nome", Pet.class);
                    petQuery.setParameter("nome", nomePet);
                    Pet pet = petQuery.getSingleResult();

                    // Encontre o serviço
                    TypedQuery<Servico> servicoQuery = em.createQuery("SELECT s FROM Servico s WHERE s.nome = :nome", Servico.class);
                    servicoQuery.setParameter("nome", nomeServico);
                    Servico servico = servicoQuery.getSingleResult();

                    // Remove a associação do serviço do pet
                    pet.getServicos().remove(servico);
                    em.merge(pet);

                    // Atualiza a lista após a remoção
                    em.getTransaction().commit();
                    // Atualiza a lista de serviços após a remoção
                    atualizarListaServicos();
                } catch (Exception e) {
                    if (em.getTransaction().isActive()) {
                        em.getTransaction().rollback();
                    }
                    e.printStackTrace();
                } finally {
                    em.close();
                }
            }
        } else {
            // Mostrar mensagem de erro ou alerta
            javax.swing.JOptionPane.showMessageDialog(this, "Selecione um serviço para remover.");
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemover;
    private javax.swing.JMenu jCliente;
    private javax.swing.JList<String> jListaServico;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu jServico;
    // End of variables declaration//GEN-END:variables
}
